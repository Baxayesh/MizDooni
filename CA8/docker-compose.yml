version: '2.2'

services:

  frontend:
    image: mizdooni-react-app
    container_name: mizdooni-react-app-container
    build:
      context: ./mizdooni-frontend
    ports:
      - "80:8080"

  backend:
    build:
      context: ./mizdooni-backend
    environment:
      - ELASTIC_APM_SERVICE_NAME=Mizdooni
      - ELASTIC_APM_APPLICATION_PACKAGES=ir.ut.ie
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - SPRING_SECURITY_CROS_ORIGINS=https://localhost, http://localhost:3001
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_DATASOURCE_USERNAME=mizdooni_db_user
      - SPRING_DATASOURCE_PASSWORD=Mizd00N!!
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_URL=jdbc:mysql://database:3306/mizdooni_db
    ports:
      - "443:443"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - mizdooni-network

  database:
    image: mysql:8.4.0
    environment:
      MYSQL_DATABASE: "mizdooni_db"
      MYSQL_USER: "mizdooni_db_user"
      MYSQL_PASSWORD: "Mizd00N!!"
      MYSQL_ROOT_PASSWORD: "Mizd00N!!@@db@@root@@password"
    ports:
      - "3307:3306"
    networks:
      - mizdooni-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "database"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.21
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    networks:
    - mizdooni-network
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    networks:
    - mizdooni-network
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.21
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
    - 5601:5601
    networks:
    - mizdooni-network
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
  mysql-data:
  esdata:
    driver: local

networks:
  mizdooni-network:
    driver: bridge
